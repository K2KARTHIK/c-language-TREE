#include<stdio.h>
#include<stdlib.h>

struct node
{
    int data;
    struct node *left;
    struct node *right;
};

struct node *create()
{
    struct node *new;
    int x;
    new = (struct node*)malloc(sizeof(struct node));
    printf("Enter the data (or -1 to stop): ");
    scanf("%d", &x);
    if(x == -1)
    {
        return NULL;
    }
    new->data = x;

    printf("Enter the data in the left child of %d: ", x);
    new->left = create();

    printf("Enter the data in the right child of %d: ", x);
    new->right = create();

    return new;
}

void preorder(struct node *root)
{
    if (root != NULL)
    {
        printf("%d ", root->data);
        preorder(root->left);
        preorder(root->right);
    }
}

void inorder(struct node *root)
{
    if (root != NULL)
    {
        inorder(root->left);
        printf("%d ", root->data);
        inorder(root->right);
    }
}

void postorder(struct node *root)
{
    if (root != NULL)
    {
        postorder(root->left);
        postorder(root->right);
        printf("%d ", root->data);
    }
}

int main()
{
    struct node *root = NULL;

    printf("Create a binary tree:\n");
    root = create();

    printf("\nPreorder traversal: ");
    preorder(root);

    printf("\nInorder traversal: ");
    inorder(root);

    printf("\nPostorder traversal: ");
    postorder(root);

    return 0;
}
